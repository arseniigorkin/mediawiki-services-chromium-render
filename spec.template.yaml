swagger: '2.0'
info:
  version: 0.4.0
  title: MediaWiki PDF Render Service
  description: A service for rendering HTML to PDFs
  termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
  contact:
    name: the Wikimedia Services team
    url: http://mediawiki.org/wiki/Services
  license:
    name: Apache2
    url: http://www.apache.org/licenses/LICENSE-2.0
x-default-params:
  domain: en.wikipedia.org
paths:
  # from routes/root.js
  /robots.txt:
    get:
      tags:
        - Root
        - Robots
      description: Gets robots.txt
      x-amples:
        - title: robots.txt check
          request: {}
          response:
            status: 200
            headers:
              user-agent: '*'
              disallow: '/'
  /:
    get:
      tags:
        - Root
      description: The root service end-point
      produces:
        - application/json
      x-amples:
        - title: root with no query params
          request: {}
          response:
            status: 404
        - title: spec from root
          request:
            query:
              spec: true
          response:
            status: 200
        - title: doc from root
          request:
            query:
              doc: true
          response:
            status: 200
        - title: root with wrong query param
          request:
            query:
              fooo: true
          response:
            status: 404
  # from routes/v1.js
  /{domain}/v1/siteinfo{/prop}:
    get:
      tags:
        - Site info
        - MW API call
        - Example
      description: Calls the MW API siteinfo action and returns the response
      produces:
        - application/json
      x-amples:
        - title: site info for default domain
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
        - title: site info for a non-existent domain
          request:
            params:
              domain: my.fake.domain
          response:
            status: 504
            headers:
              content-type: application/json
        - title: site info check for valid prop
          request:
            params:
              prop: sitename
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              sitename: Wikipedia
        - title: site info check for invalid prop
          request:
            params:
              prop: blaprop
          response:
            status: 404
            headers:
              content-type: application/json
  /{domain}/v1/page/{title}:
    get:
      tags:
        - Page content
        - Example
      description: Gets the HTML for the page with the given title
      produces:
        - text/html
        - application/json
      x-amples:
        - title: get the Foobar page from en.wp.org
          request:
            params:
              title: Foobar
          response:
            status: 200
            headers:
              content-type: text/html
  /{domain}/v1/page/{title}/lead:
    get:
      tags:
        - Page content
        - Lead section
        - Example
      description: Gets the lead-section HTML for the page with the given title
      produces:
        - text/html
        - application/json
      x-amples:
        - title: get the lead section for Barack Obama
          request:
            params:
              title: Barack Obama
          response:
            status: 200
            headers:
              content-type: text/html
  # from routes/info.js
  /_info:
    get:
      tags:
        - Service information
      description: Gets information about the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service info
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
              description: /.+/
              version: /.+/
              home: /.+/
  /_info/name:
    get:
      tags:
        - Service information
        - Service name
      description: Gets the name of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service name
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
  /_info/version:
    get:
      tags:
        - Service information
        - Service version
      description: Gets the running version of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service version
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              version: /.+/
  /_info/home:
    get:
      tags:
        - Service information
        - Service homepage
      description: Redirects to the home page
      x-amples:
        - title: redirect to the home page
          request: {}
          response:
            status: 301
  # from routes/ex.js
  /ex/err/array:
    get:
      tags:
        - Example
        - Error
        - Internal error
      description: Generates an internal error due to a wrong array declaration
      produces:
        - application/json
      x-amples:
        - title: wrong array declaration example
          request: {}
          response:
            status: 500
            headers:
              content-type: application/json
  /ex/err/file:
    get:
      tags:
        - Example
        - Error
        - Internal error
      description: Generates an internal error due to a non-existing file
      produces:
        - application/json
      x-amples:
        - title: non-existing file example
          request: {}
          response:
            status: 500
            headers:
              content-type: application/json
  /ex/err/manual/error:
    get:
      tags:
        - Example
        - Error
        - Internal error
      description: Generates an internal error due to a user-thrown error
      produces:
        - application/json
      x-amples:
        - title: user error example
          request: {}
          response:
            status: 500
            headers:
              content-type: application/json
  /ex/err/manual/deny:
    get:
      tags:
        - Example
        - Error
        - Access denied
      description: Generates an access-denied error
      produces:
        - application/json
      x-amples:
        - title: access denied error example
          request: {}
          response:
            status: 403
            headers:
              content-type: application/json
  /ex/err/manual/auth:
    get:
      tags:
        - Example
        - Error
        - Unauthorised access
      description: Generates an unauthorised error
      produces:
        - application/json
      x-amples:
        - title: unauthorised error example
          request: {}
          response:
            status: 401
            headers:
              content-type: application/json

  /{domain}/v1/pdf/{title}/{format}/{type}:
    get:
      tags:
        - Page content
      description: Gets the PDF for the page with the given title in the given format
      parameters:
        - in: path
          name: domain
          type: string
          required: true
          description: Wikipedia domain
        - in: path
          name: title
          type: string
          required: true
          description: Title we want to generate PDF for
        - in: path
          name: format
          type: string
          enum: ['a4', 'letter', 'legal']
          required: true
          description: PDF format
        - in: path
          name: type
          schema:
            type: string
            enum: ['mobile', 'desktop']
          required: false
          description: PDF type - mobile (optimized for reading on mobile devices) or desktop (regular PDF). `desktop` is the default render mode and it will used if param `type` is not passed
      produces:
        - application/pdf
        - application/json
      responses:
        200:
          description: A PDF was rendered successfully
          schema:
            type: file
        404:
          description: The specified article was not found
          schema:
            $ref: "#/definitions/HTTPError"
        500:
          description: A response is unavailable because server encountered an internal error
          schema:
            $ref: "#/definitions/HTTPError"
        503:
          description: A response is unavailable because service queue is busy or full
          schema:
            $ref: "#/definitions/HTTPError"
      x-amples:
        - title: Print the Foo page from en.wp.org in letter format
          request:
            params:
              title: Foo
              format: letter
              type: desktop
          response:
            status: 200
            headers:
              content-type: application/pdf
              content-disposition: download; filename="Foo.pdf"; filename*=UTF-8''Foo.pdf
        - title: Print the Bar page from en.wp.org in A4 format using optimized for reading on mobile devices
          request:
            params:
              title: Bar
              format: a4
              type: mobile
          response:
            status: 200
            headers:
              content-type: application/pdf
              content-disposition: download; filename="Bar.pdf"; filename*=UTF-8''Bar.pdf
        - title: Respond file not found for a nonexistent title
          request:
            params:
              title: Nonexistent_title
              format: letter
          response:
            status: 404
            headers:
              content-type: application/json
            schema:
              type: object
              properties:
                name: HTTPError
                status: 404
                message: '404'
                details: Article 'Nonexistent_title' not found
        - title: Respond bad request for an unsupported format
          request: {}
          response:
            status: 404 # FIX: this should return a 400. See T186127.
            headers:
              content-type: text/html # FIX: use application/json. See T186127.
definitions:
  HTTPError:
    type: object
    properties:
      name:
        type: string
        description: Error type, usually HTTPError
      status:
        type: integer
        description: HTTP Error code
      message:
        type: string
        description: Error type, usually error code
      details:
        type: string
        description: Error details
    required:
      - name
      - status
      - message
